name: Release

on:
  release:
    types: [released]

jobs:
  build_marmos:
    name: Build Marmos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-marmos

  build_and_release_docker:
    name: Build and Release Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build and push images
        run: |
          TAG=$(echo "${{ github.event.release.tag_name }}" | sed 's/v//') # Remove the 'v' prefix
          MARMOS_TAG=bradchatha/marmos:$TAG

          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          
          docker build -f ./devops/pkg/docker/Dockerfile -t $MARMOS_TAG .
          docker push $MARMOS_TAG

  build_and_release_npm:
    name: Build and Release marmos-docfx
    runs-on: ubuntu-latest
    needs: build_marmos
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/download-marmos

      - name: Generate marmos.ts
        run: ./marmos generate-typescript --output-file dogfood/typescript/src/marmos.ts

      - uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: ./dogfood/typescript/pnpm-lock.yaml

      - name: Install Dependencies
        working-directory: dogfood/typescript
        run: pnpm install --frozen-lockfile

      - name: Build
        working-directory: dogfood/typescript
        run: pnpm run build

      - name: Release
        working-directory: dogfood/typescript
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          TAG=$(echo "${{ github.event.release.tag_name }}" | sed 's/v//') # Remove the 'v' prefix
          npm version --allow-same-version --no-commit-hooks --no-git-tag-version $TAG
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          npm publish --access public

  update_demo_repo:
    name: Update Docfx Demo Repo
    runs-on: ubuntu-latest
    needs: build_and_release_npm
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/download-marmos

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "7"

      - uses: actions/checkout@v4
        with:
          repository: 'juptune/marmos-docfx-demo'
          token: ${{ secrets.DOCFX_DEMO_PAT }}
          path: 'marmos-docfx-demo'

      - name: Run update.sh in marmos-docfx-demo
        working-directory: marmos-docfx-demo
        run: |
          TAG=$(echo "${{ github.event.release.tag_name }}" | sed 's/v//') # Remove the 'v' prefix
          npx --yes marmos-docfx@${TAG} # Install the new version of marmos-docfx
          dotnet tool update -g docfx
          bash update.sh $GITHUB_WORKSPACE/marmos

      - name: Commit and push changes
        working-directory: marmos-docfx-demo
        run: |
          git config --global user.email "bradley@chatha.dev"
          git config --global user.name "Bradley Chatha (CI)"
          git add .
          git commit -m "Update marmos-docfx-demo due to new marmos release"
          git push