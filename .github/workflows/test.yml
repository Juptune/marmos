name: Unittests

on:
  pull_request:
  push:

jobs:
  linux_test:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Tooling (apt)
        shell: sh
        run: sudo apt update && sudo apt install -y python3-pip libsodium-dev

      - name: Install Tooling (pip)
        shell: sh
        run: pip3 install meson ninja

      - name: Install Dlang
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ldc-latest

      - name: Configure Meson
        shell: sh
        run: meson setup build --prefix $(pwd)/install

      - name: Build
        run: meson compile -C build

      - name: Meson Test
        run: meson test -C build

      - uses: actions/checkout@v4
        with:
          repository: 'Juptune/juptune'
          path: 'juptune'

      - uses: actions/setup-node@v4
        with:
          node-version: 'latest'
      
      - name: Node Install
        run: |
          cd dogfood/typescript
          corepack enable pnpm
          pnpm install

      - name: Generate Models
        run: |
          mkdir dogfood/typescript/_models
          cd dogfood/typescript/_models
          for file in $(find ../../../../juptune/src/ -name '*.d'); do
            ../../../build/marmos generate-generic $file
          done

          ../../../build/marmos generate-typescript --output-file ../src/marmos.ts

      - name: Convert Models
        run: |
          cd dogfood/typescript
          ./bin/dev.js convert --outputFolder _test/docfx/ $(find "_models/" -name "*.json")

      # TODO: Add docfx build?
      # TODO: Maybe go auto update the demo repo?